name: Release macOS Binary

on:
  push:
    tags:
      # Semantic Versioning pattern
      # v1.2.3 のような形式のみマッチ
      # v1.2.3-alpha.1 のようなプレリリースバージョンは除外
      - "v[0-9]+.[0-9]+.[0-9]+"

permissions:
  contents: write

jobs:
  verify-tag:
    runs-on: ubuntu-latest
    outputs:
      is_valid: ${{ steps.check.outputs.is_valid }}
    steps:
      - name: Check semantic version format
        id: check
        run: |
          TAG=${GITHUB_REF#refs/tags/}
          if [[ $TAG =~ ^v(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)\.(0|[1-9][0-9]*)$ ]]; then
            echo "is_valid=true" >> $GITHUB_OUTPUT
          else
            echo "is_valid=false" >> $GITHUB_OUTPUT
          fi

  build-and-release:
    needs: verify-tag
    if: needs.verify-tag.outputs.is_valid == 'true'
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.21"
          cache: true

      - name: Install dependencies
        run: |
          go mod download
          brew install sqlite3

      - name: Build
        run: |
          mkdir -p dist
          CGO_ENABLED=1 GOOS=darwin GOARCH=amd64 go build -o dist/fssq-darwin-amd64
          cd dist && tar czf fssq-darwin-amd64.tar.gz fssq-darwin-amd64

      - name: Generate schema.sql hash
        run: shasum -a 256 schema.sql > dist/schema.sql.sha256

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          files: |
            dist/fssq-darwin-amd64.tar.gz
            schema.sql
            dist/schema.sql.sha256
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
